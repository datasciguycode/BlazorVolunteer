@page "/home"
@rendermode InteractiveServer
@using Volunteer.Services
@using Microsoft.FluentUI.AspNetCore.Components
@using Volunteer.Components
@inject IAuthService AuthService
@implements IDisposable

<PageTitle>Home</PageTitle>

<style>
    .standard-button {
        min-width: 100px;
    }

    .wide-button {
        min-width: 120px;
    }
</style>

<br />

@if (!AuthService.IsAuthenticated)
{
    <!-- Login Dialog - Only visible when showLoginDialog is true -->
    <LoginDialog ShowDialog="@showLoginDialog" ShowDialogChanged="@((value) => showLoginDialog = value)"
        OnLoginResult="@HandleLoginResult" />
}

@code {
    private bool showLoginDialog = false;

    protected override void OnInitialized()
    {
        AuthService.AuthenticationStateChanged += OnAuthenticationStateChanged;
    }

    // -----------------------------------------------------------------

    private void OnAuthenticationStateChanged()
    {
        InvokeAsync(StateHasChanged);
    }

    // -----------------------------------------------------------------

    private void HandleLoginResult(bool success)
    {
        // The auth state is already managed by the AuthService
        // The UI will update automatically via the event
        // Close the dialog after successful login
        if (success)
        {
            showLoginDialog = false;
        }
    }

    // -----------------------------------------------------------------

    public void Dispose()
    {
        AuthService.AuthenticationStateChanged -= OnAuthenticationStateChanged;
    }

    // -----------------------------------------------------------------
}

<style>
    .auth-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .content-area {
        margin-top: 20px;
    }

    .card-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-top: 30px;
    }

    .feature-card {
        width: 300px;
        padding: 20px;
    }
</style>